{"version":3,"sources":["components/AddCategory.js","helpers/getGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","gifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","UseFechtGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6KAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACQ,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAK,GAAC,OAAKH,GAAL,mBAAoBG,OACpCF,EAAc,MAKd,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAjBU,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,QAiBXG,YAAY,wB,+BCPjBC,EAhBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACNC,EADM,iDAC0CC,UAAUH,GADpD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QATvB,kBAaLM,GAbK,4CAAH,sDCCAO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,6DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAuBxC,OAjBAC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAd,GAEHe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAGd,UAIR,CAACpB,IAEGqB,EDpBwBK,CAAa1B,GAAhCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAGpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,2CAAb,wBACZ,qBAAKA,UAAU,WAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYtBgB,EA3BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,aAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAcA,cAAgBA,IAE9B,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAWA,GACLA,Y,MCblC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2a83a8e1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( e => [inputValue, ...e]);\r\n            setinputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Escribe tu Anime\"\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nconst getGifs = async ( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CTEcC78ca7977Sn7OaqI0phj14F8Tt2f`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    //console.log({id, title, url})\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__backInDown\">\r\n            <img src={ url } alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { UseFechtGifs } from '../hooks/useFetchGift'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const {data:images, loading} = UseFechtGifs(category)\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"loading animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"cardGrid\">\r\n                \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from '../helpers/getGift'\r\n\r\n\r\nexport const UseFechtGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( category )\r\n        .then( img => {\r\n\r\n            setTimeout(()=>{\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n\r\n            }, 3000)\r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"All Gifs\"])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory  setCategories={ setCategories }/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => ( \r\n                        <GifGrid \r\n                            category={ category }\r\n                            key={ category }\r\n                        /> \r\n                    )\r\n                    \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './gifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}